A work-in-progress painting/sketching/drawing application.

Supports Wacom tablets (and possibly other tablet brands) via the X11 (Linux) and WinTab (Windows) APIs.
Tested with a Wacom Intuos Draw.

== Dependencies ==

OpenGL 3.1 (headers included)
	Supported Extensions:
		GL_ARB_debug_output
		GL_ARB_clear_texture
		GL_ARB_get_program_binary (not currently used)
		GL_ARB_timer_query
		GL_ARB_texture_storage

GLFW (tested with 3.2.1)
Glad (included)
Freetype (tested with 2.8)
stb_rect_pack (included)
zlib (tested with 1.2.11)
libpng (tested with 1.6.35)
GLM (tested with 0.9.9.0)
* GLM is header-only. The headers are included in windows_include, no .dll is needed.
xinput (linux only, install libxi-devel when compiling on Solus)
pkg-config (only used when compiling)

Optional:
	webp

== Compiling ==

For Linux:

0. To set up Solus Linux for c/c++ development, run 
	sudo eopkg install -c system.devel
on ubuntu run
	sudo apt-get update && sudo apt-get install build-essential

1. Install the development packages for GLFW, Freetype, zlib, and libpng

2. cd into the project root directory and run
	mkdir build
	cd build
	cmake ..
	make -j9

For Windows:

Set up MinGW for compiling C++ or use Visual Studio (you will have to set up a project yourself)
N.B. If using MinGW, you must use version 7.3.0 as this is the version that the DLLs were compiled with. To use a different version of MinGW you must recompile the DLLs (you will have to download the sources for each library).
N.B. If using Visual Studio, the included DLL files will probably not work. You will have to compile the sources yourself. For GLFW, DLL files for visual studio are available on their website.

Run the following commands
mkdir build
cd build
cmake .. -G "MinGW Makefiles"
mingw32-make -j9

To run the program run these commands:
cd ..
build\paintapp


** To debug with gdb on windows (when using mingw), run gdb build/paint.exe
Before running the program, type 
	break abort
into the gdb console so that gdb will stop execution when an assertation fails. 


** The DLLs in this repo can be reused in any project so long as all sources are compiled with MinGW  7.3.0